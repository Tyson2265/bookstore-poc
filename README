# üìö Bookstore PoC API

A simple online bookstore API built with Node.js (Express + TypeScript), Sequelize ORM, and PostgreSQL.
Allows authors to self-publish books, manage their profile, and list books in a searchable catalog. 

# üöÄ Features

REST API built with Express + TypeScript

PostgreSQL database

Fully Dockerized

Features include authentication, user management, book CRUD, and searchable book listings

This API is fully **containerized** with Docker & Docker Compose ‚Äî works on any system with Docker installed.

# üõ†Ô∏è Prerequisites

Docker Desktop installed and running

Node.js (only if you want to run locally without Docker)

---

---

## üöÄ Getting Started

### 1Ô∏è‚É£ Clone the repository

```bash
# 1. Clone the repository
git clone https://github.com/Tyson2265/



# 2 Environmental

cp .env 

# üíª Run Without Docker (Local Development)

npm install
npx sequelize-cli db:migrate
npm run dev


# 3. Start the app and database with Docker Compose
docker-compose up --build


# 4. The API will be available at:

http://localhost:5000


#API Endpoints
#üîê Authentication

#Signup

curl -X POST http://localhost:5000/auth/register \
     -H "Content-Type: application/json" \
     -d '{"username":"tyson","password":"Password123","pseudonym":"TysonWrites"}'


#Login 

# Response returns a JWT token. Store it in TOKEN to authenticate next requests.

curl -X POST http://localhost:5000/auth/login \
     -H "Content-Type: application/json" \
     -d '{"username":"tyson","password":"Password123"}'

# User(AUTH)

#GetmyProfile

curl -X GET http://localhost:5000/users/me \
     -H "Authorization: Bearer $TOKEN"


#UpdatemyProfile

curl -X PUT http://localhost:5000/users/me \
     -H "Content-Type: application/json" \
     -H "Authorization: Bearer $TOKEN" \
     -d '{"pseudonym":"TysonAuthor"}'

#üì¶ Books

#Create Books(AUTH)

curl -X POST http://localhost:5000/books \
  -H "Content-Type: application/json" \
  -H "Authorization: Bearer $TOKEN" \
  -d '{"title": "My First Book","description":"An amazing story", "price": 49.99,"coverImage":"https://example.com/cover.jpg"}'

#Read All Books(PUBLIC)

curl -X GET http://localhost:5000/books



#Read Single Book(PUBLIC)

curl -X GET http://localhost:5000/books/1


# Search by title
curl -X GET "http://localhost:5000/books?title=My%20First%20Book"

# Search by author pseudonym
curl -X GET "http://localhost:5000/books?author=TysonWrites"

# Combine queries
curl -X GET "http://localhost:5000/books?title=Book&author=TysonWrites"


#Update Book(AUTH)

curl -X PUT http://localhost:5000/books/1 \
     -H "Content-Type: application/json" \
     -H "Authorization: Bearer $TOKEN" \
     -d '{"title":"My Updated Book","description":"An even better story", "price":59.99,"coverImage":"https://example.com/new-cover.jpg"}'

  
#Delete Books(AUTH)

curl -X DELETE http://localhost:5000/books/1 \
     -H "Authorization: Bearer $TOKEN"